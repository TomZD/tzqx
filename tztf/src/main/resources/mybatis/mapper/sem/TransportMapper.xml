<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.movinginfo.tztf.sem.mapper.TransportMapper">
  <resultMap id="BaseResultMap" type="cn.movinginfo.tztf.sem.domain.Transport">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="secret" jdbcType="VARCHAR" property="secret" />
    <result column="charge_man" jdbcType="VARCHAR" property="chargeMan" />
    <result column="office_tel" jdbcType="VARCHAR" property="officeTel" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="home_tel" jdbcType="VARCHAR" property="homeTel" />
    <result column="fax" jdbcType="VARCHAR" property="fax" />
    <result column="mail" jdbcType="VARCHAR" property="mail" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="linkman_office_tel" jdbcType="VARCHAR" property="linkmanOfficeTel" />
    <result column="linkman_phone" jdbcType="VARCHAR" property="linkmanPhone" />
    <result column="linkman_home_tel" jdbcType="VARCHAR" property="linkmanHomeTel" />
    <result column="linkman_fax" jdbcType="VARCHAR" property="linkmanFax" />
    <result column="linkman_mail" jdbcType="VARCHAR" property="linkmanMail" />
    <result column="linkman_communication_type" jdbcType="VARCHAR" property="linkmanCommunicationType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, address, type, longitude, latitude, company, area, rank, secret, charge_man, 
    office_tel, phone, home_tel, fax, mail, linkman, linkman_office_tel, linkman_phone, 
    linkman_home_tel, linkman_fax, linkman_mail, linkman_communication_type
  </sql>
  <select id="selectByExample" parameterType="cn.movinginfo.tztf.sem.domain.TransportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sem_t_transport
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.movinginfo.tztf.sem.domain.TransportExample">
    delete from sem_t_transport
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.movinginfo.tztf.sem.domain.Transport">
    insert into sem_t_transport (id, name, address, 
      type, longitude, latitude, 
      company, area, rank, 
      secret, charge_man, office_tel, 
      phone, home_tel, fax, 
      mail, linkman, linkman_office_tel, 
      linkman_phone, linkman_home_tel, linkman_fax, 
      linkman_mail, linkman_communication_type)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, 
      #{company,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{rank,jdbcType=VARCHAR}, 
      #{secret,jdbcType=VARCHAR}, #{chargeMan,jdbcType=VARCHAR}, #{officeTel,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{homeTel,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, 
      #{mail,jdbcType=VARCHAR}, #{linkman,jdbcType=VARCHAR}, #{linkmanOfficeTel,jdbcType=VARCHAR}, 
      #{linkmanPhone,jdbcType=VARCHAR}, #{linkmanHomeTel,jdbcType=VARCHAR}, #{linkmanFax,jdbcType=VARCHAR}, 
      #{linkmanMail,jdbcType=VARCHAR}, #{linkmanCommunicationType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.movinginfo.tztf.sem.domain.Transport">
    insert into sem_t_transport
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="secret != null">
        secret,
      </if>
      <if test="chargeMan != null">
        charge_man,
      </if>
      <if test="officeTel != null">
        office_tel,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="homeTel != null">
        home_tel,
      </if>
      <if test="fax != null">
        fax,
      </if>
      <if test="mail != null">
        mail,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="linkmanOfficeTel != null">
        linkman_office_tel,
      </if>
      <if test="linkmanPhone != null">
        linkman_phone,
      </if>
      <if test="linkmanHomeTel != null">
        linkman_home_tel,
      </if>
      <if test="linkmanFax != null">
        linkman_fax,
      </if>
      <if test="linkmanMail != null">
        linkman_mail,
      </if>
      <if test="linkmanCommunicationType != null">
        linkman_communication_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=VARCHAR},
      </if>
      <if test="secret != null">
        #{secret,jdbcType=VARCHAR},
      </if>
      <if test="chargeMan != null">
        #{chargeMan,jdbcType=VARCHAR},
      </if>
      <if test="officeTel != null">
        #{officeTel,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="homeTel != null">
        #{homeTel,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="mail != null">
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="linkmanOfficeTel != null">
        #{linkmanOfficeTel,jdbcType=VARCHAR},
      </if>
      <if test="linkmanPhone != null">
        #{linkmanPhone,jdbcType=VARCHAR},
      </if>
      <if test="linkmanHomeTel != null">
        #{linkmanHomeTel,jdbcType=VARCHAR},
      </if>
      <if test="linkmanFax != null">
        #{linkmanFax,jdbcType=VARCHAR},
      </if>
      <if test="linkmanMail != null">
        #{linkmanMail,jdbcType=VARCHAR},
      </if>
      <if test="linkmanCommunicationType != null">
        #{linkmanCommunicationType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.movinginfo.tztf.sem.domain.TransportExample" resultType="java.lang.Long">
    select count(*) from sem_t_transport
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sem_t_transport
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=VARCHAR},
      </if>
      <if test="record.secret != null">
        secret = #{record.secret,jdbcType=VARCHAR},
      </if>
      <if test="record.chargeMan != null">
        charge_man = #{record.chargeMan,jdbcType=VARCHAR},
      </if>
      <if test="record.officeTel != null">
        office_tel = #{record.officeTel,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.homeTel != null">
        home_tel = #{record.homeTel,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null">
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null">
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanOfficeTel != null">
        linkman_office_tel = #{record.linkmanOfficeTel,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanPhone != null">
        linkman_phone = #{record.linkmanPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanHomeTel != null">
        linkman_home_tel = #{record.linkmanHomeTel,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanFax != null">
        linkman_fax = #{record.linkmanFax,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanMail != null">
        linkman_mail = #{record.linkmanMail,jdbcType=VARCHAR},
      </if>
      <if test="record.linkmanCommunicationType != null">
        linkman_communication_type = #{record.linkmanCommunicationType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sem_t_transport
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=VARCHAR},
      secret = #{record.secret,jdbcType=VARCHAR},
      charge_man = #{record.chargeMan,jdbcType=VARCHAR},
      office_tel = #{record.officeTel,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      home_tel = #{record.homeTel,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      linkman_office_tel = #{record.linkmanOfficeTel,jdbcType=VARCHAR},
      linkman_phone = #{record.linkmanPhone,jdbcType=VARCHAR},
      linkman_home_tel = #{record.linkmanHomeTel,jdbcType=VARCHAR},
      linkman_fax = #{record.linkmanFax,jdbcType=VARCHAR},
      linkman_mail = #{record.linkmanMail,jdbcType=VARCHAR},
      linkman_communication_type = #{record.linkmanCommunicationType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="findTransportById"  resultMap="BaseResultMap">
		  select * from sem_t_transport where id=#{id}
  </select>
</mapper>