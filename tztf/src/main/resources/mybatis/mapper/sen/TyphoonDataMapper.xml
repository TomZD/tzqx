<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.movinginfo.tztf.sen.mapper.TyphoonDataMapper">
  <resultMap id="BaseResultMap" type="cn.movinginfo.tztf.sen.model.TyphoonData">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="num" jdbcType="VARCHAR" property="num" />
    <result column="nowtime" jdbcType="VARCHAR" property="nowtime" />
    <result column="lon" jdbcType="VARCHAR" property="lon" />
    <result column="lat" jdbcType="VARCHAR" property="lat" />
    <result column="move_speed" jdbcType="VARCHAR" property="moveSpeed" />
    <result column="move_direction" jdbcType="VARCHAR" property="moveDirection" />
    <result column="pressure" jdbcType="VARCHAR" property="pressure" />
    <result column="wind_level" jdbcType="VARCHAR" property="windLevel" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="data_source" jdbcType="VARCHAR" property="dataSource" />
    <result column="fore_time" jdbcType="VARCHAR" property="foreTime" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="fore_pres" jdbcType="VARCHAR" property="forePres" />
    <result column="fore_lon" jdbcType="VARCHAR" property="foreLon" />
    <result column="fore_lat" jdbcType="VARCHAR" property="foreLat" />
    <result column="fore_wind_level" jdbcType="VARCHAR" property="foreWindLevel" />
    <result column="fore_pressure" jdbcType="VARCHAR" property="forePressure" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, num, nowtime, lon, lat, move_speed, move_direction, pressure, wind_level, grade, 
    data_source, fore_time, publisher, fore_pres, fore_lon, fore_lat, fore_wind_level, 
    fore_pressure
  </sql>
  <select id="selectByExample" parameterType="cn.movinginfo.tztf.sen.model.TyphoonDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from typhoon_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from typhoon_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from typhoon_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.movinginfo.tztf.sen.model.TyphoonDataExample">
    delete from typhoon_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.movinginfo.tztf.sen.model.TyphoonData">
    insert into typhoon_data (id, num, nowtime, 
      lon, lat, move_speed, 
      move_direction, pressure, wind_level, 
      grade, data_source, fore_time, 
      publisher, fore_pres, fore_lon, 
      fore_lat, fore_wind_level, fore_pressure
      )
    values (#{id,jdbcType=INTEGER}, #{num,jdbcType=VARCHAR}, #{nowtime,jdbcType=VARCHAR}, 
      #{lon,jdbcType=VARCHAR}, #{lat,jdbcType=VARCHAR}, #{moveSpeed,jdbcType=VARCHAR}, 
      #{moveDirection,jdbcType=VARCHAR}, #{pressure,jdbcType=VARCHAR}, #{windLevel,jdbcType=VARCHAR}, 
      #{grade,jdbcType=VARCHAR}, #{dataSource,jdbcType=VARCHAR}, #{foreTime,jdbcType=VARCHAR}, 
      #{publisher,jdbcType=VARCHAR}, #{forePres,jdbcType=VARCHAR}, #{foreLon,jdbcType=VARCHAR}, 
      #{foreLat,jdbcType=VARCHAR}, #{foreWindLevel,jdbcType=VARCHAR}, #{forePressure,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.movinginfo.tztf.sen.model.TyphoonData">
    insert into typhoon_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="nowtime != null">
        nowtime,
      </if>
      <if test="lon != null">
        lon,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="moveSpeed != null">
        move_speed,
      </if>
      <if test="moveDirection != null">
        move_direction,
      </if>
      <if test="pressure != null">
        pressure,
      </if>
      <if test="windLevel != null">
        wind_level,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="dataSource != null">
        data_source,
      </if>
      <if test="foreTime != null">
        fore_time,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="forePres != null">
        fore_pres,
      </if>
      <if test="foreLon != null">
        fore_lon,
      </if>
      <if test="foreLat != null">
        fore_lat,
      </if>
      <if test="foreWindLevel != null">
        fore_wind_level,
      </if>
      <if test="forePressure != null">
        fore_pressure,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="nowtime != null">
        #{nowtime,jdbcType=VARCHAR},
      </if>
      <if test="lon != null">
        #{lon,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=VARCHAR},
      </if>
      <if test="moveSpeed != null">
        #{moveSpeed,jdbcType=VARCHAR},
      </if>
      <if test="moveDirection != null">
        #{moveDirection,jdbcType=VARCHAR},
      </if>
      <if test="pressure != null">
        #{pressure,jdbcType=VARCHAR},
      </if>
      <if test="windLevel != null">
        #{windLevel,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="dataSource != null">
        #{dataSource,jdbcType=VARCHAR},
      </if>
      <if test="foreTime != null">
        #{foreTime,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="forePres != null">
        #{forePres,jdbcType=VARCHAR},
      </if>
      <if test="foreLon != null">
        #{foreLon,jdbcType=VARCHAR},
      </if>
      <if test="foreLat != null">
        #{foreLat,jdbcType=VARCHAR},
      </if>
      <if test="foreWindLevel != null">
        #{foreWindLevel,jdbcType=VARCHAR},
      </if>
      <if test="forePressure != null">
        #{forePressure,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.movinginfo.tztf.sen.model.TyphoonDataExample" resultType="java.lang.Long">
    select count(*) from typhoon_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update typhoon_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=VARCHAR},
      </if>
      <if test="record.nowtime != null">
        nowtime = #{record.nowtime,jdbcType=VARCHAR},
      </if>
      <if test="record.lon != null">
        lon = #{record.lon,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=VARCHAR},
      </if>
      <if test="record.moveSpeed != null">
        move_speed = #{record.moveSpeed,jdbcType=VARCHAR},
      </if>
      <if test="record.moveDirection != null">
        move_direction = #{record.moveDirection,jdbcType=VARCHAR},
      </if>
      <if test="record.pressure != null">
        pressure = #{record.pressure,jdbcType=VARCHAR},
      </if>
      <if test="record.windLevel != null">
        wind_level = #{record.windLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.dataSource != null">
        data_source = #{record.dataSource,jdbcType=VARCHAR},
      </if>
      <if test="record.foreTime != null">
        fore_time = #{record.foreTime,jdbcType=VARCHAR},
      </if>
      <if test="record.publisher != null">
        publisher = #{record.publisher,jdbcType=VARCHAR},
      </if>
      <if test="record.forePres != null">
        fore_pres = #{record.forePres,jdbcType=VARCHAR},
      </if>
      <if test="record.foreLon != null">
        fore_lon = #{record.foreLon,jdbcType=VARCHAR},
      </if>
      <if test="record.foreLat != null">
        fore_lat = #{record.foreLat,jdbcType=VARCHAR},
      </if>
      <if test="record.foreWindLevel != null">
        fore_wind_level = #{record.foreWindLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.forePressure != null">
        fore_pressure = #{record.forePressure,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update typhoon_data
    set id = #{record.id,jdbcType=INTEGER},
      num = #{record.num,jdbcType=VARCHAR},
      nowtime = #{record.nowtime,jdbcType=VARCHAR},
      lon = #{record.lon,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=VARCHAR},
      move_speed = #{record.moveSpeed,jdbcType=VARCHAR},
      move_direction = #{record.moveDirection,jdbcType=VARCHAR},
      pressure = #{record.pressure,jdbcType=VARCHAR},
      wind_level = #{record.windLevel,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      data_source = #{record.dataSource,jdbcType=VARCHAR},
      fore_time = #{record.foreTime,jdbcType=VARCHAR},
      publisher = #{record.publisher,jdbcType=VARCHAR},
      fore_pres = #{record.forePres,jdbcType=VARCHAR},
      fore_lon = #{record.foreLon,jdbcType=VARCHAR},
      fore_lat = #{record.foreLat,jdbcType=VARCHAR},
      fore_wind_level = #{record.foreWindLevel,jdbcType=VARCHAR},
      fore_pressure = #{record.forePressure,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.movinginfo.tztf.sen.model.TyphoonData">
    update typhoon_data
    <set>
      <if test="num != null">
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="nowtime != null">
        nowtime = #{nowtime,jdbcType=VARCHAR},
      </if>
      <if test="lon != null">
        lon = #{lon,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=VARCHAR},
      </if>
      <if test="moveSpeed != null">
        move_speed = #{moveSpeed,jdbcType=VARCHAR},
      </if>
      <if test="moveDirection != null">
        move_direction = #{moveDirection,jdbcType=VARCHAR},
      </if>
      <if test="pressure != null">
        pressure = #{pressure,jdbcType=VARCHAR},
      </if>
      <if test="windLevel != null">
        wind_level = #{windLevel,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="dataSource != null">
        data_source = #{dataSource,jdbcType=VARCHAR},
      </if>
      <if test="foreTime != null">
        fore_time = #{foreTime,jdbcType=VARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="forePres != null">
        fore_pres = #{forePres,jdbcType=VARCHAR},
      </if>
      <if test="foreLon != null">
        fore_lon = #{foreLon,jdbcType=VARCHAR},
      </if>
      <if test="foreLat != null">
        fore_lat = #{foreLat,jdbcType=VARCHAR},
      </if>
      <if test="foreWindLevel != null">
        fore_wind_level = #{foreWindLevel,jdbcType=VARCHAR},
      </if>
      <if test="forePressure != null">
        fore_pressure = #{forePressure,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.movinginfo.tztf.sen.model.TyphoonData">
    update typhoon_data
    set num = #{num,jdbcType=VARCHAR},
      nowtime = #{nowtime,jdbcType=VARCHAR},
      lon = #{lon,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=VARCHAR},
      move_speed = #{moveSpeed,jdbcType=VARCHAR},
      move_direction = #{moveDirection,jdbcType=VARCHAR},
      pressure = #{pressure,jdbcType=VARCHAR},
      wind_level = #{windLevel,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      data_source = #{dataSource,jdbcType=VARCHAR},
      fore_time = #{foreTime,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      fore_pres = #{forePres,jdbcType=VARCHAR},
      fore_lon = #{foreLon,jdbcType=VARCHAR},
      fore_lat = #{foreLat,jdbcType=VARCHAR},
      fore_wind_level = #{foreWindLevel,jdbcType=VARCHAR},
      fore_pressure = #{forePressure,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <insert id="insertList" parameterType="java.util.List" >
        insert into typhoon_data
        (
        num,
        nowtime,lon,lat,move_speed,move_direction,pressure,wind_level,grade,data_source,fore_time,publisher,fore_pres,fore_lon,fore_lat,fore_wind_level,
        fore_pressure
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.num},
            #{item.nowtime},
             #{item.lon},
            #{item.lat},
            #{item.moveSpeed},
            #{item.moveDirection},
          #{item.pressure},
          #{item.windLevel},
           #{item.grade},
            #{item.dataSource},
           #{item.foreTime},
                #{item.publisher},
           
            #{item.forePres},

		#{item.foreLon},
            
            #{item.foreLat},

            #{item.foreWindLevel},
           #{item.forePressure}

            )
        </foreach>
</insert>
</mapper>