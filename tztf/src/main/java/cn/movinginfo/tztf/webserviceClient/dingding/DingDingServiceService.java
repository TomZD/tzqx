
package cn.movinginfo.tztf.webserviceClient.dingding;


import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import cn.movinginfo.tztf.common.utils.ConfigWebserviceHelper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "DingDingServiceService", targetNamespace = "http://cxf.dingding.cn/", wsdlLocation = "http://localhost:8089/hyqxWebService/services/DingDing?wsdl")
public class DingDingServiceService
    extends Service
{

    private final static URL DINGDINGSERVICESERVICE_WSDL_LOCATION;
    private final static WebServiceException DINGDINGSERVICESERVICE_EXCEPTION;
    private final static QName DINGDINGSERVICESERVICE_QNAME = new QName("http://cxf.dingding.cn/", "DingDingServiceService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
//            url = new URL("http://localhost:8089/hyqxWebService/services/DingDing?wsdl");
            String value = ConfigWebserviceHelper.getValue("dingdingservice");
            url = new URL(value);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DINGDINGSERVICESERVICE_WSDL_LOCATION = url;
        DINGDINGSERVICESERVICE_EXCEPTION = e;
    }

    public DingDingServiceService() {
        super(__getWsdlLocation(), DINGDINGSERVICESERVICE_QNAME);
    }

    public DingDingServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DINGDINGSERVICESERVICE_QNAME, features);
    }

    public DingDingServiceService(URL wsdlLocation) {
        super(wsdlLocation, DINGDINGSERVICESERVICE_QNAME);
    }

    public DingDingServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DINGDINGSERVICESERVICE_QNAME, features);
    }

    public DingDingServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DingDingServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns DingDingService
     */
    @WebEndpoint(name = "DingDingServicePort")
    public DingDingService getDingDingServicePort() {
        return super.getPort(new QName("http://cxf.dingding.cn/", "DingDingServicePort"), DingDingService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DingDingService
     */
    @WebEndpoint(name = "DingDingServicePort")
    public DingDingService getDingDingServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://cxf.dingding.cn/", "DingDingServicePort"), DingDingService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DINGDINGSERVICESERVICE_EXCEPTION!= null) {
            throw DINGDINGSERVICESERVICE_EXCEPTION;
        }
        return DINGDINGSERVICESERVICE_WSDL_LOCATION;
    }

}
