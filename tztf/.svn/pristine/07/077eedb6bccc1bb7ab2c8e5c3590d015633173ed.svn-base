<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.movinginfo.tztf.sev.mapper.EmpersonMapper">
  <resultMap id="BaseResultMap" type="cn.movinginfo.tztf.sev.domain.Emperson">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="valid" jdbcType="INTEGER" property="valid" />
    <result column="area_id" jdbcType="VARCHAR" property="areaId" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="ps" jdbcType="VARCHAR" property="ps" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="departmentid" jdbcType="BIGINT" property="departmentid" />
  </resultMap>
  
    <resultMap id="MyResultMap" type="cn.movinginfo.tztf.sev.mapper.AreaResult">
	    <id column="id" jdbcType="INTEGER" property="id" />
	    <result column="value" jdbcType="VARCHAR" property="value" />
	    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, phone, valid, area_id, sex, ps, create_time, departmentid
  </sql>
  <select id="selectByExample" parameterType="cn.movinginfo.tztf.sev.domain.EmpersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sev_t_emperson
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sev_t_emperson
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sev_t_emperson
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.movinginfo.tztf.sev.domain.EmpersonExample">
    delete from sev_t_emperson
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.movinginfo.tztf.sev.domain.Emperson">
    insert into sev_t_emperson (id, name, phone, 
      valid, area_id, sex, 
      ps, create_time, departmentid
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{valid,jdbcType=INTEGER}, #{areaId,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{ps,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{departmentid,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.movinginfo.tztf.sev.domain.Emperson">
    insert into sev_t_emperson
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="valid != null">
        valid,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="ps != null">
        ps,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="departmentid != null">
        departmentid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ps != null">
        #{ps,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.movinginfo.tztf.sev.domain.EmpersonExample" resultType="java.lang.Long">
    select count(*) from sev_t_emperson
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sev_t_emperson
    <set>
      <!-- <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if> -->
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.valid != null">
        valid = #{record.valid,jdbcType=INTEGER},
      </if>
      <if test="record.areaId != null">
        area_id = #{record.areaId,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.ps != null">
        ps = #{record.ps,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.departmentid != null">
        departmentid = #{record.departmentid,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sev_t_emperson
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      valid = #{record.valid,jdbcType=INTEGER},
      area_id = #{record.areaId,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      ps = #{record.ps,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      departmentid = #{record.departmentid,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.movinginfo.tztf.sev.domain.Emperson">
    update sev_t_emperson
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="valid != null">
        valid = #{valid,jdbcType=INTEGER},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="ps != null">
        ps = #{ps,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentid != null">
        departmentid = #{departmentid,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.movinginfo.tztf.sev.domain.Emperson">
    update sev_t_emperson
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      valid = #{valid,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      ps = #{ps,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      departmentid = #{departmentid,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
	  <select id="getDisntictArea"  resultMap="MyResultMap">
		   select value,content from sys_dict where key_name = 'area_id' 
		   and value in(select DISTINCT area_id from sys_t_department)  
	  </select>
	  
	  <select id="getByDeptId"  resultMap="MyResultMap">
		 select value,content from sys_dict where key_name = 'area_id' and value in 
		 (select area_id from sys_t_department WHERE id = #{id})
	  </select>
	  
</mapper>